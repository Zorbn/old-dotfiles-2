#!/usr/bin/env bash

link_file() {
	file=$1
	if [[ ! -d "$HOME/$file" ]]
	then
		ln -s "$(realpath $file)" "$HOME/$file"
	fi
}

unlink_file() {
	file=$1
	rm "$HOME/$file"
}

do_linking() {
	# Check if changes should be reversed
	if [[ $2 == false ]]
	then
		link_file "$1"
	else
		unlink_file "$1"
	fi
}

update_sources() {
	file="$(realpath $1)"
	first_line="$(head -n 1 $file)"
	target_path="${first_line:1}"

	if [[ ! -f $target_path ]]
	then
		echo "\"$file\" needs a target path as the first line"
		echo 'eg: $HOME/.bashrc'
		return
	fi

	source_line="source $file # Generated by load_dotfiles! Don't edit manually!"

	sed -i "s|$source_line||g" $target_path

	if [[ $2 == false ]]
	then
		echo "$source_line" >> $target_path
	fi

}

reverse=false
arg=$1

if [[ $arg == "-r" ]] || [[ $arg == "--reverse" ]]
then
	reverse=true
elif [[ $arg != "" ]]
then
	echo "Usage: load_dots [OPTIONS]"
	echo "Links dotfiles to home directory"
	echo "	-r, --reverse	removes changes made by this command"
	exit
fi

script_path=$(realpath $0)
dots_dir=$(dirname $script_path)

cd "$dots_dir/configs"

for file in *
do
	if [[ $file == "*" ]]; then continue; fi
	do_linking "$file" "$reverse"
done

for file in .*
do
	if [[ $file == ".*" ]]; then continue; fi
	if [[ $file == "." ]]; then continue; fi
	if [[ $file == ".." ]]; then continue; fi
	do_linking "$file" "$reverse"
done

cd "$dots_dir/sources"

for file in *
do
	if [[ $file == "*" ]]; then continue; fi
	update_sources "$file" "$reverse"
done

for file in .*
do
	if [[ $file == ".*" ]]; then continue; fi
	if [[ $file == "." ]]; then continue; fi
	if [[ $file == ".." ]]; then continue; fi
	updates_sources "$file" "$reverse"
done
