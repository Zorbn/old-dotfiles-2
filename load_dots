#!/usr/bin/env bash

link_file() {
	local file=$1
	if [[ ! -d "$HOME/$file" ]]
	then
		ln -s "$(realpath $file)" "$HOME/$file"
	fi
}

unlink_file() {
	local file=$1
	rm "$HOME/$file"
}

do_linking() {
	# Check if changes should be reversed
	if [[ $2 == false ]]
	then
		link_file "$1"
	else
		unlink_file "$1"
	fi
}

update_sources() {
	local file=$(realpath $1)
	local reverse=$2
	local first_line=$(head -n 1 $file)
	local target_path=$(eval "echo ${first_line:1}")

	if [[ ! -f $target_path ]]
	then
		echo "$target_path"
		echo "\"$file\" needs a target path as the first line"
		echo 'eg: $HOME/.bashrc'
		return
	fi

	local source_line="source $file # Generated by load_dotfiles! Don't edit manually!"

	sed -i "/${source_line//\//\\/}/d" $target_path

	if [[ $reverse == false ]]
	then
		echo "$source_line" >> $target_path
	fi

}

process_dot() {
	local file=$1
	local reverse=$2
	local dir=$(echo $(pwd) | awk 'BEGIN { FS = "/" } ; {print $NF}')

	if [[ $file == "*"  ]]; then return; fi
	if [[ $file == ".*" ]]; then return; fi
	if [[ $file == "."  ]]; then return; fi
	if [[ $file == ".." ]]; then return; fi

	if [[ $dir == "configs" ]]
	then
		do_linking "$file" "$reverse"
	elif [[ $dir == "sources" ]]
	then
		update_sources "$file" "$reverse"
	fi
}

main() {
	local reverse=false
	local arg=$1

	if [[ $arg == "-r" ]] || [[ $arg == "--reverse" ]]
	then
		reverse=true
	elif [[ $arg != "" ]]
	then
		echo "Usage: load_dots [OPTIONS]"
		echo "Links dotfiles to home directory"
		echo "	-r, --reverse	removes changes made by this command"
		exit
	fi

	local script_path=$(realpath $0)
	local dots_dir=$(dirname $script_path)

	cd "$dots_dir/configs"
	for file in *;  do process_dot "$file" "$reverse"; done
	for file in .*; do process_dot "$file" "$reverse"; done

	cd "$dots_dir/sources"
	for file in *;  do process_dot "$file" "$reverse"; done
	for file in .*; do process_dot "$file" "$reverse"; done
}

main $1
